{% extends "shuup/front/base.jinja" %}
{% from "shuup/front/macros/general.jinja" import render_field %}

{% block title %}{% trans %}Reset password{% endtrans %}{% endblock %}

{% block content %}
    <div class="row">
        <div class="col-sm-6 col-sm-offset-3">
            <h2 class="text-center">{{ _("Reset your password") }}</h2>
            <p>{{ _("Enter the email address associated to your account:") }}</p>
            <p class="text-center">
                {{ render_field(form.email, render_label=False) }}

                <h5 id="error" class="text-danger text-center"></h5>
                <h5 id="success" class="text-success text-center"></h5>
                <div class="text-center">
                    <button type="button" class="btn btn-primary" id="btn-reset-pwd">
                        {{ _("Reset Password") }}
                    </button>
                </div>
            </p>
        </div>
    </div>
{% endblock %}

{% block extrajs %}
    <script>
        if (window.firebase) {
            firebase.auth().useDeviceLanguage();
            $("#btn-reset-pwd").click(function (evt) {
                $(evt.currentTarget).prop("disabled", "disabled");

                var email = $("#{{ form.email.auto_id }}").val();
                $("#error").html("");
                $("#success").html("");

                firebase.auth().sendPasswordResetEmail(email)
                .then(function (result) {
                    $("#success").html("{{ _('Password reset email sent!') }}");
                })
                .catch(function (error) {
                    var errorMsg = error.message;

                    if (error.code === "auth/invalid-email") {
                        errorMsg = '{{ _("The email address is badly formatted.") }}';
                    } else if (error.code === "auth/user-not-found") {
                        errorMsg = '{{ _("There is no existing user corresponding to the provided email.") }}';
                    }

                    $("#error").html(errorMsg);
                    $(evt.currentTarget).prop("disabled", null);
                });
            });
        }
    </script>
{% endblock %}
